// Generated by CoffeeScript 1.6.3
(function() {
  var BaseCollector, CpuCollector, os, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseCollector = require('./base_collector');

  os = require('os');

  CpuCollector = (function(_super) {
    __extends(CpuCollector, _super);

    function CpuCollector() {
      _ref = CpuCollector.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CpuCollector.prototype.pre = function() {
      var _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
      this.pre_user_time = os != null ? (_ref1 = os.cpus()) != null ? (_ref2 = _ref1[0]) != null ? (_ref3 = _ref2.times) != null ? _ref3.user : void 0 : void 0 : void 0 : void 0;
      return this.pre_system_time = os != null ? (_ref4 = os.cpus()) != null ? (_ref5 = _ref4[0]) != null ? (_ref6 = _ref5.times) != null ? _ref6.sys : void 0 : void 0 : void 0 : void 0;
    };

    CpuCollector.prototype.post = function() {
      var _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
      this.post_user_time = os != null ? (_ref1 = os.cpus()) != null ? (_ref2 = _ref1[0]) != null ? (_ref3 = _ref2.times) != null ? _ref3.user : void 0 : void 0 : void 0 : void 0;
      this.post_system_time = os != null ? (_ref4 = os.cpus()) != null ? (_ref5 = _ref4[0]) != null ? (_ref6 = _ref5.times) != null ? _ref6.sys : void 0 : void 0 : void 0 : void 0;
      this.elapsed_user_time = this.post_user_time - this.pre_user_time;
      return this.elapsed_system_time = this.post_system_time - this.pre_system_time;
    };

    CpuCollector.prototype.name = function() {
      return "cpu";
    };

    CpuCollector.prototype.value = function() {
      return this.elapsed_user_time + this.elapsed_system_time;
    };

    return CpuCollector;

  })(BaseCollector);

  module.exports = CpuCollector;

}).call(this);
